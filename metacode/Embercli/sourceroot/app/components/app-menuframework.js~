/* 
//ProjectGenerator: NO AUTHOMATIC UPDATE

    Created on : Nov 18, 2015, 12:54:01 PM
    Generated on 15.11.2015 11:7
    Author     : Franky Laseure
*/
import Ember from 'ember';

export default Ember.Component.extend({
    indexservice: Ember.inject.service('index'),
    splashservice: Ember.inject.service('splash'),
	apps: [],
    siteuser: null,

    fixedapps: [],
    freeapps: [],
    activeapp: null,
    allapps: [],
    
    setup: Ember.on('init', function() {
        //needed to activate observers
        this.get("indexservice").set("dummy", "");
        this.get("splashservice").initapps(this.apps);
    }),

    actions: {
        openapp: function(app) {
            this.set("activeapp", app);
            this.activeapp.set("isactive", true);
            var applaunched = false;
            if(app.fixed) {
                //search if app is launched
                if(Ember.isEmpty(app.fixedid)) {
                    //not launched, take the next free id
                    //if none is free, force as normal app
                    if(this.fixedapps.get('length')<10) {
                        app.fixedid = this.fixedapps.get('length');
                        this.fixedapps.addObject(app);
                        this.allapps.addObject(app);
                        this.setidVisible("fixedapp" + app.fixedid);
                        applaunched = true;
                        this.sendAction("renderapp", app, "fixedapp" + app.fixedid);
                    }
                } else {
                    //only make visible
                    this.setidVisible("fixedapp" + app.fixedid);
                    applaunched = true;
                }
            } 
            if(!applaunched) {
                this.setidVisible("app");
                this.addFreeapp(app);
                this.sendAction("renderapp", app, "app");
            }
            this.setidVisible("appview");
            return false;
        },
        menutab: function(app) {
            this.activeapp.set("isactive", false);
            this.setidHidden("appview");
            if(this.activeapp.fixed) {
            	this.setidHidden("fixedapp" + this.activeapp.fixedid);
            } else {
            	this.setidHidden("app");
            }
            if(!Ember.isEmpty(app)) {
	            this.send("openapp", app);
            }
            return false;
        },
        openpopup: function() {
            this.setidVisible("popup");
        },
        closepopup: function() {
            this.setidHidden("popup");
        }
    },
    
    addFreeapp: function(app) {
        var found = false;
        var l = this.freeapps.get('length');
        for(var i=0; i<l && !found; i++) {
            if(this.freeapps.objectAt(i).appid===app.appid) {
                found = true;
            }
        }
        if(!found) {
            this.freeapps.addObject(app);
            this.allapps.addObject(app);
        }
    },

    setidVisible(divid) {
    	document.getElementById(divid).classList.remove('ishidden');
        document.getElementById(divid).classList.add('isvisible');
    },

    setidHidden(divid) {
    	document.getElementById(divid).classList.remove('isvisible');
        document.getElementById(divid).classList.add('ishidden');
    }
});

